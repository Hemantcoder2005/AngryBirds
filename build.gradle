buildscript {
  repositories {
    mavenCentral()
    google()
    gradlePluginPortal()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
    mavenLocal()
  }
  dependencies {
    // Example Gradle plugin dependency (if needed)
    classpath "org.docstr:gwt-gradle-plugin:$gwtPluginVersion"
  }
}

allprojects {
  apply plugin: 'eclipse'
  apply plugin: 'idea'

  ext {
    gdxVideo = '1.3.2-SNAPSHOT'
    appName = 'AngryBirds'
    javaVersion = JavaVersion.VERSION_11
  }

  repositories {
    mavenCentral()
    google()
    maven { url 'https://jitpack.io' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
    mavenLocal()
  }
}

subprojects {
  apply plugin: 'java-library'

  sourceCompatibility = rootProject.ext.javaVersion
  targetCompatibility = rootProject.ext.javaVersion

  dependencies {
    // JUnit 5 dependencies
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'

    // Mockito dependencies
    testImplementation 'org.mockito:mockito-core:4.0.0'
    testImplementation 'org.mockito:mockito-inline:4.0.0'
  }

  // Ensure all tests run on the JUnit 5 platform
  tasks.withType(Test) {
    useJUnitPlatform()
  }

  // Task to generate asset list for internal usage (optional)
  tasks.register('generateAssetList') {
    inputs.dir("${project.rootDir}/assets/")
    File assetsFolder = new File("${project.rootDir}/assets/")
    File assetsFile = new File(assetsFolder, "assets.txt")
    assetsFile.delete()

    fileTree(assetsFolder).collect { assetsFolder.relativePath(it) }.each {
      assetsFile.append(it + "\n")
    }
  }
  processResources.dependsOn 'generateAssetList'
}

// Additional configuration for specific subprojects
project(':core') {
  // Specific dependencies or configurations for core module if needed
}

// Eclipse configuration
eclipse {
  project {
    name = "${rootProject.ext.appName}-parent"
  }
}

